{"version":3,"sources":["components/Info.js","components/Timer.js","components/TimerResults.js","components/sound/music.mp3","components/App.js","reportWebVitals.js","index.js"],"names":["Info","useState","activeInfo","setActiveInfo","handleClick","className","onClick","Timer","props","progressBarStyle","width","percentage","backgroundColor","donePomodoros","minutes","seconds","style","time","startingProgress","TimerResults","color","buttonState","App","button","setButton","setMinutes","setSeconds","setTime","setDonePomodoros","progress","setProgress","setPercentage","setStartingProgress","conversion","Math","floor","progressBar","useEffect","secondIntervall","setInterval","clearInterval","interval","Howl","src","Music","play","progressIntervall","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7f1865d6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport { TiInfoLarge } from \"react-icons/ti\";\r\nimport { IoClose } from \"react-icons/io5\";\r\n\r\nconst Info = () => {\r\n  const [activeInfo, setActiveInfo] = useState(true);\r\n\r\n  function handleClick() {\r\n    setActiveInfo(!activeInfo);\r\n  }\r\n\r\n  return (\r\n    <div className=\"info_wrapper\">\r\n      <TiInfoLarge className=\"info_icon\" onClick={handleClick} />\r\n      <div className={activeInfo ? \"active_info\" : \"info_area\"}>\r\n        <IoClose className=\"close_btn\" onClick={handleClick} />\r\n        <h2 className=\"pomodoro_info_h1\">What is the pomodoro technique?</h2>\r\n        <p className=\"pomodoro_info_text\">\r\n          The Pomodoro Technique is a time management system that encourages\r\n          people to work with the time they have-rather than against it. Using\r\n          this method, you break your workday into 25-minute chunks separated by\r\n          five-minute breaks. These intervals are referred to as pomodoros.\r\n          After about four pomodoros, you take a longer break 15 minutes.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Info;\r\n","import React from \"react\";\r\n\r\nconst Timer = (props) => {\r\n  const progressBarStyle = {\r\n    width: `${100 - props.percentage}%`,\r\n    backgroundColor: \"#DF181A\",\r\n  };\r\n\r\n  const progressBarStyleStart = {\r\n    backgroundColor: \"#fff\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer_wrapper\">\r\n      <div className=\"time\">\r\n        <p>\r\n          {props.donePomodoros === 0 && \"Pomodoro #1\"}\r\n          {props.donePomodoros === 1 && \"Pomodoro #1 Complete\"}\r\n          {props.donePomodoros === 2 && \"Pomodoro #2\"}\r\n          {props.donePomodoros === 3 && \"Pomodoro #2 Complete\"}\r\n          {props.donePomodoros === 4 && \"Pomodoro #3\"}\r\n          {props.donePomodoros === 5 && \"Pomodoro #3 Complete\"}\r\n          {props.donePomodoros === 6 && \"Pomodoro #4\"}\r\n          {props.donePomodoros === 7 && \"Pomodoro #4 Complete\"}\r\n        </p>\r\n        <p className=\"clock\">\r\n          {props.minutes <= 9 ? \"0\" + props.minutes : props.minutes}:\r\n          {props.seconds <= 9 ? \"0\" + props.seconds : props.seconds}\r\n        </p>\r\n      </div>\r\n      <div className=\"progress_bar\">\r\n        <div\r\n          className=\"progress_value\"\r\n          style={\r\n            props.time === props.startingProgress\r\n              ? progressBarStyleStart\r\n              : progressBarStyle\r\n          }\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React from \"react\";\r\n\r\nimport { GiTomato } from \"react-icons/gi\";\r\nimport { CgPlayButtonO } from \"react-icons/cg\";\r\nimport { CgPlayPauseO } from \"react-icons/cg\";\r\n\r\nconst TimerResults = (props) => {\r\n  const style = {\r\n    color: \"#DF181A\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"timer_result_wrapper\">\r\n      <div className=\"tomato_icons\">\r\n        <GiTomato\r\n          className=\"tomato_icon\"\r\n          style={props.donePomodoros >= 1 ? style : null}\r\n        />\r\n        <GiTomato\r\n          className=\"tomato_icon\"\r\n          style={props.donePomodoros >= 3 ? style : null}\r\n        />\r\n        <GiTomato\r\n          className=\"tomato_icon\"\r\n          style={props.donePomodoros >= 5 ? style : null}\r\n        />\r\n        <GiTomato\r\n          className=\"tomato_icon\"\r\n          style={props.donePomodoros >= 7 ? style : null}\r\n        />\r\n      </div>\r\n      <div className=\"timer_text\">\r\n        <p>\r\n          {props.donePomodoros === 0 && \"Focus for 25 minutes\"}\r\n          {props.donePomodoros === 1 && \"Take a short break\"}\r\n          {props.donePomodoros === 2 && \"Focus for 25 minutes\"}\r\n          {props.donePomodoros === 3 && \"Take a short break\"}\r\n          {props.donePomodoros === 4 && \"Focus for 25 minutes\"}\r\n          {props.donePomodoros === 5 && \"Take a short break\"}\r\n          {props.donePomodoros === 6 && \"Focus for 25 minutes\"}\r\n          {props.donePomodoros === 7 && \"Take a long break\"}\r\n        </p>\r\n      </div>\r\n      <div className=\"icons\" onClick={props.handleClick}>\r\n        {props.buttonState ? (\r\n          <CgPlayPauseO className=\"pause_icon\" />\r\n        ) : (\r\n          <CgPlayButtonO className=\"play_icon\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimerResults;\r\n","export default __webpack_public_path__ + \"static/media/music.1eb6fd48.mp3\";","import React, { useState, useEffect } from \"react\";\nimport Info from \"./Info\";\nimport Timer from \"./Timer\";\nimport TimerResult from \"./TimerResults\";\nimport \"./TimerResults.css\";\nimport \"./Timer.css\";\nimport \"./Info.css\";\nimport \"./App.css\";\nimport { Howl, Howler } from \"howler\";\nimport Music from \"./sound/music.mp3\";\n\nconst App = (props) => {\n  const [button, setButton] = useState(false);\n  const [minutes, setMinutes] = useState(25);\n  const [seconds, setSeconds] = useState(0);\n  const [time, setTime] = useState(1500);\n  const [donePomodoros, setDonePomodoros] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [percentage, setPercentage] = useState(0);\n  const [startingProgress, setStartingProgress] = useState(1500);\n\n  function handleClick() {\n    setButton(!button);\n    if (donePomodoros === 0) {\n      setProgress(1);\n    }\n  }\n\n  // Converting time to minutes and seconds\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function conversion() {\n    setMinutes(Math.floor(time / 60));\n    setSeconds(time % 60);\n    donePomodorosFunction();\n  }\n\n  useEffect(() => {\n    let secondIntervall = null;\n    if (button) {\n      secondIntervall = setInterval(conversion, 1000);\n      return () => clearInterval(secondIntervall);\n    }\n  }, [button, conversion]);\n\n  // Timer\n  function donePomodorosFunction() {\n    if (time === 0 && button === true) {\n      setButton(false);\n      setDonePomodoros(donePomodoros + 1);\n      setProgress(2);\n      pomodoros();\n    }\n  }\n\n  function pomodoros() {\n    if (donePomodoros === 0 || donePomodoros === 2 || donePomodoros === 4) {\n      setTime(300);\n      setStartingProgress(300);\n      setMinutes(5);\n      setSeconds(0);\n      setProgress(3);\n    }\n\n    if (donePomodoros === 1 || donePomodoros === 3 || donePomodoros === 5) {\n      setTime(1500);\n      setStartingProgress(1500);\n      setMinutes(25);\n      setSeconds(0);\n      setProgress(4);\n    }\n\n    if (donePomodoros === 6) {\n      setTime(900);\n      setStartingProgress(900);\n      setMinutes(15);\n      setSeconds(0);\n      setProgress(5);\n    }\n\n    if (donePomodoros === 7) {\n      setTime(1500);\n      setStartingProgress(1500);\n      setMinutes(25);\n      setSeconds(0);\n      setDonePomodoros(0);\n    }\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (button) {\n      interval = setInterval(() => {\n        setTime((time) => time - 1);\n      }, 1000);\n    } else if (!button && time !== 0) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [button, time]);\n\n  // Alarm\n  function SoundPlay(src) {\n    const sound = new Howl({\n      src: [Music],\n    });\n    sound.play();\n  }\n\n  if (time === 0) {\n    SoundPlay();\n  }\n\n  // Calculation of percentages - progress bar\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  function progressBar() {\n    if (button) {\n      setPercentage((time / startingProgress) * 100);\n    }\n  }\n\n  useEffect(() => {\n    let progressIntervall = null;\n    if (button) {\n      progressIntervall = setInterval(progressBar, 1000);\n      return () => clearInterval(progressIntervall);\n    }\n  }, [button, progressBar]);\n\n  return (\n    <div className=\"wrapper\">\n      <Info />\n      <Timer\n        seconds={seconds}\n        minutes={minutes}\n        donePomodoros={donePomodoros}\n        progress={progress}\n        percentage={percentage}\n        time={time}\n        startingProgress={startingProgress}\n      />\n      <TimerResult\n        handleClick={handleClick}\n        buttonState={button}\n        donePomodoros={donePomodoros}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}